source("http://jonsmitchell.com/code/plotFxn02b.R")
pdf("r02b-cumulativeMilkByTime.pdf", height = 4, width = 4)
?par
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)
?par
hour <- which(beren3$event == "nap"
naps <- which(beren3$event == "nap")
nap <- which(beren3$event == "nap")
beren4 <- beren3[naps,]
beren4 <- beren3[nap,]
source("http://jonsmitchell.com/code/plotFxn02b.R")
beren4 <- beren3[nap,]
beren4
uni(beren3$event)
unique(beren3$event)
beren4
nap <- which(beren3$event == "nap")
beren4 <- beren3[nap,]
beren4
Start <- beren4$start_hour + beren4$start_minute / 60
End <- beren4$end_hour + beren4$end_minute / 60
duration <- End-Start
plot(beren4$age,duration)
nap <- which(beren3$event == "nap")
beren4 <- beren3[nap,]
beren4
Start <- beren4$start_hour + beren4$start_minute / 60
End <- beren4$end_hour + beren4$end_minute / 60
duration <- End-Start
plot(beren4$age,duration)
nap <- which(beren3$event == "nap")
beren4 <- beren3[nap,]
beren4
Start <- beren4$start_hour + beren4$start_minute /60
End <- beren4$end_hour + beren4$end_minute /60
duration <- End-Start
plot(beren4$age,duration)
graph <- plot(beren4$age,duration)
graph
beren4
duration <- End-Start
plot(beren4$age,duration)
cor.test(beren4$age,duration)
unique(beren3$event)
circumtraitHead <- which(beren3$event == "circum_trait_head")
circumtraitHead
avgHeadcircum <- which(beren3$value[circumtraitHead])
traitHeadcircum <- which(beren34event == "trait_head_circum")
traitHeadcircum <- which(beren3$event == "trait_head_circum")
traitHeadcircum
avgHeadcircum <- mean(beren3$event[traitHeadcircum])
avgHeadcircum <- mean(beren3$value[traitHeadcircum])
avgHeadcircum
cor.test(beren3$value[traitHeadcircum], beren3$age[traitHeadcircum])
?cor.test
t.test(beren3$value[traitHeadcircum], beren3$age[traitHeadcircum])
trueMean1 <- 5
trueSD1 <- 5
population1 <- rnorm(1e6, trueMean1, trueSD1)
head(population1)
trueMean2 <- 4
trueSD2 <- 5
population2 <- rnorm(1e6, trueMean2, trueSD2)
head(population2)
Sample1 <- sample(population1, size)
sample1 <- sample(population1, size)
Sample1 <- sample(population1, Size)
Sample1 <- sample(population1, Size <- 50)
Sample2 <- sample(population2, Size <- 50)
head(Sample1)
head(Sample2)
boxplot(Sample1, Sample2)
source("http://jonsmitchell.com/code/simFxn04.R")
MatGrandma <- makeFounder("grandma_mom")
head(MatGrandma)
nrow(MatGrandma)
MatGrandpa <- makeFounder("grandma_mom")
head(MatGrandpa)
nrow(MatGrandpa)
PatGrandma <- makeFounder('grandma_da')
PatGrandpa <- makeFounder("grandpa_da")
head(PatGrandma)
nrow(PatGrandma)
head(PatGrandpa)
nrow(PatGrandpa)
Alan <- makeBaby(PatGrandma, PatGrandpa)
head(Alan)
nrow(Alan)
Brenda <- makeBaby(PatGrandma, PatGrandpa)
head(Brenda)
nrow(Brenda)
Focus <- makeBaby(Brenda, Alan)
head(Focus)
nrow(Focus)
ToMom <- length( grep("mom", Focus)) / length( Focus )
head(ToMom)
ToMom
ToMomMom <- length( grep( "grandma_mom", Focus )) / length( Focus )
ToMomMom
nrow(ToMomMom)
ToMomDad <- length ( grep( "grandpa_mom", Focus )) / length( Focus )
Sibling_01 <- makeBaby(Brenda, Alan)
ToSib <- length( intersect( Focus, Sibling_01 )) / length( Focus )
head(ToSib)
ManySiblings <- replicate( le3, length( intersect( Focus, makeBaby(Brenda, Alan))) / length( Focus ))
ManySiblings <- replicate( 1e3, length( intersect( Focus, makeBaby(Brenda, Alan))) / length( Focus ))
head(ManySiblings)
quantile(ManySiblings)
mean(ManySiblings)
plot(density(ManySiblings), main="", xlab="proportion shared genes")
HWE <- function(p) { aa <- p^2 ab <- 2 * p * (1-p) bb <- (1-p)^2 return(c(aa=aa, ab=ab, bb=bb)) } HWE(0.5)
HWE <- function(p) { aa <- p^2 ab <- 2 * p * (1-p) bb <- (1-p)^2 return(c(aa=aa, ab=ab, bb=bb)) }
HWE <- function(p)
{ aa <- p^2
ab <- 2 * p * (1-p)
bb <- (1-p)^2
return(c(aa=aa, ab=ab, bb=bb)) }
HWE(0.5)
plot(1, 1, type="n", xlim=c(0, 1), ylim=c(0, 1), xlab="freq. allele a", ylab="geno. freq")
p <- seq(from = 0, to = 1, by = 0.01)
GenoFreq <- t(sapply(p, HWE))
lines(p, GenoFreq[,"aa"], lwd=2, col="red")
lines(p, GenoFreq[,"ab"], lwd=2, col="purple")
lines(p, GenoFreq[,"bb"], lwd=2, col="blue")
legend("top", legend=c("aa","ab","bb"), col=c("red","purple","blue"), lty=1, lwd=2, bty="n")
Pop <- simPop(500)
points(Pop[,"freqa"], Pop[,"Genotypes.aa"]/500, pch=21, bg="red")
Pop <- simPop(50)
points(Pop[,"freqa"], Pop[,"Genotypes.aa"]/50, pch=22, bg="red")
install.package(learnPopGen)
install.packages("learnPopGen")
library(learnPopGen)
library
learnPopGen
head(learnPopGen)
library(learnPopGen)
x <-genetic.drift(Ne=200, nrep=5, pause=0.01)
PopSizes <- 5:50
Samples <- rep(Popsizes, 5)
Samples <- rep("Popsizes", 5)
tExt <- sapply(Samples, function(x) nrow(simPop(x, 500)))
tExt <- sapply(Samples, function(x) nrow(simPop(x, 500)))
install.package(learnPopGen)
install.package(learnPopGen)
install.package('learnPopGen')
install.package("learnPopGen")
install.packages("learnPopGen")
library(learnPopGen)
Samples <- rep(Popsizes <- 5:50, 5)
tExt <- sapply(Samples, function(x) nrow(simPop(x, 500)))
Line <- lm(tExt ~ Samples)
summary(Line)
Line$coef
plot(Samples, tExt)
abline(Line)
Line2 <- lm( tExt~Samples + 0)
summary(Line2)
Line2$coef
plot(Samples, tExt)
abline(Line2)
install.packages("caret")
library(caret)
tExt2 <- BoxCoxTrans(Samples, tExt)
Samples2 <- cbind(Samples, tExt_ = predict(Text2, Samples, tExt))
Samples2 <- cbind(Samples, tExt_ = predict(tExt2, Samples, tExt))
head(Samples2)
tExt3 <- lm(tExt_ ~ Samples, tExt= Samples2)
tExt3 <- lm(tExt ~ Samples, tExt= Samples2)
tExt3 <- lm(tExt_ ~ Samples, tExt= Samples2)
tExt3 <- lm(~ Samples, tExt= Samples2)
tExt3 <- lm(Samples, tExt= Samples2)
source("https://jonsmitchell.com/code/fxn05.R")
Pop1 <- simPop(Popsize = 50, nGenerations = 100, initial_p = 0.5, h = 1, s = 0)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation", ylab="allele freq.", lwd=2)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation
", ylab="allele freq.", lwd=2)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation
", ylab="allele freq.", lwd=2)
Pop1
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation
", ylab="allele freq.", lwd=2)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "l", xlab="generation
", ylab="allele freq.", lwd=2)
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')
legend("topleft", legend = c("a", "b"), col = c("black", "red"), lwd =
2, bty="n")
plotFit( nruns = 10, n = 50, ngens = 100, init_p = 05, h = 1, s = 0)
plotFit( nruns = 10, n = 50, ngens = 100, init_p = 0.5, h = 1, s = 0)
Expectation <- c(10, 10, 10, 10)
Observed <- c(15, 15, 5, 5)
Chisq <- sum((( Expectation - Observed ) ^2 ) / Expectation )
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~
"=" ~.(Chisq)), legend.textc("expected", "observed"))
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~ . (Chisq)), legend.textc("expected", "observed"))
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~ . (Chisq)), legend.text=c("expected", "observed"))
Observed <- c(5, 0, 0, 35)
Observed <- c(2, 3, 10, 30)
Chisq
Chisq <- c(10, 10, 10, 10)
Observed <- c(10, 10, 10, 10)
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~ . (Chisq)), legend.text=c("expected", "observed"))
Observed <-c(10,10,10,10)
Chisq <- sum((( Expectation - Observed ) ^2 ) / Expectation )
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~ . (Chisq)), legend.text=c("expected", "observed"))
Observed <- c(40,40,40,40)
Chisq <- sum((( Expectation - Observed ) ^2 ) / Expectation )
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~ . (Chisq)), legend.text=c("expected", "observed"))
results <- read.csv("http://jonsmitchell.com/data/biol112labresilts.csv", stringsAsFactors =F )
results <- read.csv("http://jonsmitchell.com/data/biol112labresilts.csv
", stringsAsFactors=F)
results <- read.csv("http://jonsmitchell.com/data/biol112labresults.csv
", stringsAsFactors=F)
write.csv(Data, 'rawdata.csv', quote=F)
write.csv(Data, 'rawresults.csv', quote=F)
View(results)
setwd('C:\\OneDrive\\Desktop\\Evolution\\Tasks\\Task_04')
setwd('C:\\OneDrive\\Desktop\\Evolution\\Tasks\\Task_04b')
setwd('C://Desktop//Evolution//Tasks//Task_04')
setwd('C://Desktop//Evolution//Tasks//Task_04')
setwd('C://Desktop//Evolution//Tasks//Task_04')
setwd('C://Desktop//Evolution//Tasks//Task_04b.r')
Results <-read.csv("https://jonsmitchell.com/data/biol112labresults.csv
", stringsAsFactors=F)
write.csv(Data, 'rawresults.csv', quote=F)
counts <- results[,c("yellow", "red", "green", "blue", "black", "tan")]
backgrounds <- c("White", "Red", "Yellow", "Green", "Blue", "Black")
backgroundCol <- c("white", "#d53e4f", "#fee08b", "#abdda4", "3288bd", "black")
View(results)
calcChi(count[1,])
calcChi(counts[1,])
Chisqs <- apply(counts, 1, calcChi)
plotChis(counts)
Avg <- mean(Chisqs)
View(results)
backgroundAvgs <- tapply(Chisqs, results[,3], mean)
propSig <- length( which( Chisqs > 11.70 )) / length(Chisqs)
pereSig <- round(100 * propSig)
View(results)
pereSig
par(las = 1, mar = c(4,4,1,1), mgp = c(2, 0.5, 0), tck = -0.01, cex.
axis=1)
par(las = 1, mar = c(4,4,1,1), mgp = c(2, 0.5, 0), tck = -0.01, cex
axis=1)
par(las = 1, mar = c(4,4,1,1), mgp = c(2, 0.5, 0), tck = -0.01, cex .
axis=1)
par(las = 1, mar = c(4,4,1,1), mgp = c(2, 0.5, 0), tck = -0.01, cex axis = 1)
par(las = 1, mar = c(4,4,1,1), mgp = c(2, 0.5, 0), tck = -0.01, cex. axis = 1)
par(las = 1, mar = c(4,4,1,1), mgp = c(2, 0.5, 0), tck = -0.01, cex . axis = 1)
par(las = 1, mar = c(4,4,1,1), mgp = c(2, 0.5, 0), tck = -0.01, cex,
axis = 1)
par(las = 1, mar = c(4,4,1,1), mgp = c(2, 0.5, 0), tck = -0.01, cex.
axis = 1)
View(results)
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis=1)
hist(Chisqs, main="", xlab="chi-squared values", ylab="frequency")
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis=1)
plot(1, 1, xlim=c(0, 400), ylim=c(1, 8.5), xlab="", ylab="", type="n", yaxt="n")
axis(2, at = 1:length(backgrounds), labels = backgrounds)
mtext(side=1, expression(chi^2), cex=1.75, line=2.5)
counter <- 1
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] == i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter +1
}
abline( v = 11.70, lty=2, lwd = 2, col='black')
Simulation <- simDraws(10000)
addHist(Y=7, Dat=Simulation, Color="lightgray")
mtext(side=2, at=7, line=0, "simulated")
abline(v = 11.70, lty=2, lwd=2)
Simulation
Fit <- c(1, 1, 1, 1, 1, 1)
names(Fit) <- 1:6
Simulation2 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation2, Color=rgb(0,0,0,0,2.5))
Fit <- c(1, 1, 1, 1, 1, 1)
names(Fit) <- 1:6
Simulation3 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation3, Color=rgb(0,0,0,0,2.5))
Fit <- c(0.1,0.2,0.3,0.4,0.5,1)
names(Fit) <- 1:6
Simulation4 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation4, Color=rgb(0,0,0,0,2.5))
Fit <- c(0.5, 0.6, 0.7, 1, 1, 1)
Simulation4 <- simDraws(1e4, w = Fit)
names(Fit) <- 1:6
Simulation4 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation4, Color=rgb(0,0,0,0,2.5))
Fit <- c(0.1,0.2,0.3,0.4,0.5,1)
names(Fit) <- 1:6
Simulation5 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation5, Color=rgb(0,0,0,0,2.5))
Fit <- c(0.1,0.1,0.1,0.1,0.1,1)
names(Fit) <- 1:6
Simulation6 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation6, Color=rgb(0,0,0,0,2.5))
Simulation <- simDraws(10000)
addHist(Y=7, Dat=Simulation, Color="lightgray")
mtext(side=2, at=7, line=0, "simulated")
abline(v = 11.70, lty=2, lwd=2)
Simulation
Fit <- c(1, 1, 1, 1, 1, 1)
names(Fit) <- 1:6
Simulation2 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation2, Color=rgb(0,0,0,0.25))
Fit <- c(0.1, 1, 1, 1, 1, 1)
names(Fit) <- 1:6
Simulation3 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation3, Color=rgb(0,0,0,0.25))
Fit <- c(0.5, 0.6, 0.7, 1, 1, 1)
names(Fit) <- 1:6
Simulation4 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation4, Color=rgb(0,0,0,0.25))
Fit <- c(0.1, 0.2, 0.3, 0.4, 0.5, 1)
names(Fit) <- 1:6
Simulation5 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation5, Color=rgb(0,0,0,0.25))
Fit <- c(0.1,0.1,0.1,0.1,0.1,1)
names(Fit) <- 1:6
Simulation6 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation6, Color=rgb(0,0,0,0.25))
mtext(side=2, at=8, line=0, "sel. sim.")
Simulation7 <- c(Simulation2, Simulation3, Simulation4, Simulation5, Simulation6)
addHist(Y=8, Dat=Simulation7, Color=rgb(0,0,1,0.25))
simPop(Popsize=100, nGenerations=100, h=1, s=0, initial_p=0.5, mu=0, twoway = TRUE, w = NULL)
simPop
n.sims <- 1000
n.color <- rbinom(n.sims, 1000, 0.25)
hist(n.color)
Simulation8 <- simDraws(1e4, mu=2)
Simulation8 <- simDraws(1e4, mu=1)
Simulation8 <- simDraws(1e4, mu=0)
setwd('C:\\Users\\sians\\OneDrive\\Desktop\\Evolution\\Tasks\\Task_05')
setwd('C:\\Users\\sians\\OneDrive\\Desktop\\Evolution\\Tasks\\Task_05')
setwd('C:\\users\\Sian\\OneDrive\\Desktop\\Evolution\\Tasks\\Task_05')
setwd('C:\\users\\Sian\\OneDrive\\Desktop\\Evolution\\Tasks\\Task_05')
setwd('C:\\users\\Sian\\OneDrive\\Desktop\\Evolution\\Tasks\\Task_05')
setwd('C:\\users\\Sian\\OneDrive\\Desktop\\Evolution\\Tasks\\Task_05')
setwd('C:\\users\\Sian\\Desktop\\Evolution\\Tasks\\Task_05')
library(learnPopGen)
library(learnPopGen)
setwd('C:\\users\\Sian\\Desktop\\Evolution\\Tasks\\Task_05')
setwd('C:\\users\\Sian\\Desktop\\Evolution\\Tasks\\Task_05')
setwd('C:\\users\\Sian\\Desktop\\Evolution\\Tasks\\Task_05')
library(learnPopGen)
?coalescent.plot
learnPopGen
?learnPopGen
pdf('r05-plot1.pdf', height=6, width=6)
coalescent.plot(n=5, ngen=10, colors=NULL)
dev.off()
pdf('r05-plot2.pdf', height=6, width=6)
coalescent.plot(n=10, ngen=5, colors=NULL)
dev.off()
pdf('r05-plot3.pdf', height=6, width=6)
coalescent.plot(n=10, ngen=10, colors=NULL)
dev.off()
install.packages("coala")
install.packages("rehh", dep=T)
install.packages("assertthat", dep=T)
install.packages("RcppArmadillo", dep=T)
install.packages("https//cran.r-project.org/src/contrib/Archive/scrm/scrm 1.7.3-1.tar.gz", repos=NULL,
type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm 1.7.3-1.tar.gz", repos=NULL,
type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm 1.7.3-1.tar.gz", repos=NULL,
type="source")
install.packages("https://cran.r-project.org/scr/contrib/Archive/coala/coala 0.6.0.tar.gz", repos=NULL,
type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/coala/coala 0.6.0.tar.gz", repos=NULL,
type="source")
install.packages("phytools")
install.packages("phytools")
library("phytools")
install.packages("ape")
install.packages("ape")
install.packages("maps")
library("ape")
library("maps")
library("ape")
library("maps")
library("rehh")
model <- coal_model(sample_size = 5, loci_number = 10, loci_length =
500, ploidy = 2) +
feat_mutation(10) +
feat_recombination(10) +
sumstat_trees() +
sumstat_nucleotide_div()
model <- rehh:coal_model(sample_size = 5, loci_number = 10, loci_length =
500, ploidy = 2) +
rehh:feat_mutation(10) +
rehh:feat_recombination(10) +
rehh:sumstat_trees() +
rehh:sumstat_nucleotide_div()
model <- rehh::coal_model(sample_size = 5, loci_number = 10, loci_length =
500, ploidy = 2) +
feat_mutation(10) +
feat_recombination(10) +
sumstat_trees() +
sumstat_nucleotide_div()
model <- coal_model (sample_size = 5, loci_number = 10, loci_length =
500, ploidy = 2) +
feat_mutation(10) +
feat_recombination(10) +
sumstat_trees() +
sumstat_nucleotide_div()
library("coala")
install.packages("rehh",dep=T)
install.packages("rehh", dep = T)
install.packages("assertthat",dep=T)
install.packages("RcppArmadillo",dep=T)
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm 1.7.3-1.tar.gz", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm 1.7.3-1.tar.gz",repos=NULL,type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm1.7.3-1.tar.gz",repos=NULL,type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/coala/coala 0.6.0.tar.gz",repos=NULL,type"source")
install.packages("https://cran.r-project.org/src/contrib/Archive/coala/coala0.6.0.tar.gz",repos=NULL,type="source")
setwd('C\\users\\Sian\\Desktop\\Evolution\\Tasks\\Task_05')
setwd('C:\\users\\Sian\\Desktop\\Evolution\\Tasks\\Task_05')
library(learnPopGen)
?coalescent.plo
?coalescent.plot
?learnPopGen
??learnPopGen
pdf('r05-plot1.pdf', height=6, width=6)
coalescent.plot(n=5, ngen=10, colors=NULL)
dev.off()
pdf('r05-plot2.pdf', height=6, width=6)
coalescent.plot(n=10, ngen=5, colors=NULL)
dev.off()
pdf('r05-plot3.pdf', height=6, width=6)
coalescent.plot(n=10, ngen=10, colors=NULL)
dev.off()
install.packages("rehh",dep=T)
install.packages("assertthat",dep=T)
install.packages("RcppArmadillo",dep=T)
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm1.7.3-1.tar.gz",repos=NULL,type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm 1.7.3-1.tar.gz",repos=NULL,type="source")
install.packages("https://cran.r-project.org/scr/contrib/Archive/coala/coala0.6.0.tar.gz",repos=NULL,type="source")
library("coala")
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/coala/coala_0.6.0.tar.gz", repos=NULL, type="source")
library("coala")
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
set('C:\\users\\Sian\\OneDrive\\Desktop\\Evolution\\Tasks\\Task_05')
set('C:\\users\\Sian\\OneDrive\\Desktop\\Evolution\\Tasks\\Task_05')
library(learnPopGen)
?coalescent.plot
?learnPopGen
pdf('r05-plot1.pdf', height=6, width=6)
coalescent.plot(n=5, ngen=10, colors=NULL)
dev.off()
pdf('r05-plot2.pdf', height=6, width=6)
coalescent.plot(n=10, ngen=5, colors=NULL)
dev.off()
pdf('r05-plot3.pdf', height=6, width=6)
coalescent.plot(n=10, ngen=10, colors=NULL)
dev.off()
install.packages("rehh",dep=T)
install.packages("assertthat",dep=T)
install.packages("RcppArmadillo",dep=T)
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/coala/coala_0.6.0.tar.gz", repos=NULL, type="source")
install.packages("htpps://cran.r-project.org/src/contrib/Archive/scrm/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/coala/coala_0.6.0.tar.gz", repos=NULL, type="source")
library(coala)
install.package("coala")
install.packages("https://cran.r-project.org/src/contrib/Archive/scr/scr_1.7.3-1.tar.gz", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
install.package("coala")
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/coala/coala_0.6.0.tar.gz", repos=NULL, type="source")
install.packages("phytools")
install.packages("phytools")
library(phytools)
install.packages("ape")
install.packages("ape")
library("ape")
install.packages("maps")
library("maps")
install.packages("coala")
install.packages("coala")
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/coala/coala_0.6.0.tar.gz", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
?scrm
??scrm
?scr
simulator_scrm
scrm
simulator(scrm)
simulator("scrm")
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm
/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm
/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/coala/coala_0.6.0.tar.gz", repos=NULL, type="source")
PATH="${RTOOLS40_HOME}\usr\bin;${PATH}"
install.packages("jsonlite")
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm
/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
library(coala)
library(learnPopGen)
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm
/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm
/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
